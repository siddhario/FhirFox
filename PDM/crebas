/*==============================================================*/
/* DBMS name:      Microsoft SQL Server 2008                    */
/* Created on:     3/25/2015 3:00:52 PM                         */
/*==============================================================*/


if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENTCAREPROVIDERS') and o.name = 'FK_Patient_Care_Providers')
alter table ADMINISTRATIVE.PATIENTCAREPROVIDERS
   drop constraint FK_Patient_Care_Providers
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_ADDRESS') and o.name = 'FK_Patient_Addresses')
alter table ADMINISTRATIVE.PATIENT_ADDRESS
   drop constraint FK_Patient_Addresses
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_COMMUNICATION') and o.name = 'FK_Patient_Communications')
alter table ADMINISTRATIVE.PATIENT_COMMUNICATION
   drop constraint FK_Patient_Communications
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_CONTACT') and o.name = 'FK_Patient_Contacts')
alter table ADMINISTRATIVE.PATIENT_CONTACT
   drop constraint FK_Patient_Contacts
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_CONTACT_RELATIONSHIP') and o.name = 'FK_Patient_Contact_Relationships')
alter table ADMINISTRATIVE.PATIENT_CONTACT_RELATIONSHIP
   drop constraint FK_Patient_Contact_Relationships
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_CONTACT_TELECOM') and o.name = 'FK_Patient_Contact_Telecoms')
alter table ADMINISTRATIVE.PATIENT_CONTACT_TELECOM
   drop constraint FK_Patient_Contact_Telecoms
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_IDENTIFIER') and o.name = 'FK_Patient_Identifiers')
alter table ADMINISTRATIVE.PATIENT_IDENTIFIER
   drop constraint FK_Patient_Identifiers
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_LINK') and o.name = 'FK_Patient_Links')
alter table ADMINISTRATIVE.PATIENT_LINK
   drop constraint FK_Patient_Links
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_NAME') and o.name = 'FK_Patient_Names')
alter table ADMINISTRATIVE.PATIENT_NAME
   drop constraint FK_Patient_Names
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_PHOTO') and o.name = 'FK_Patient_Photos')
alter table ADMINISTRATIVE.PATIENT_PHOTO
   drop constraint FK_Patient_Photos
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_RACE') and o.name = 'FK_Patient_Races')
alter table ADMINISTRATIVE.PATIENT_RACE
   drop constraint FK_Patient_Races
go

if exists (select 1
   from sys.sysreferences r join sys.sysobjects o on (o.id = r.constid and o.type = 'F')
   where r.fkeyid = object_id('ADMINISTRATIVE.PATIENT_TELECOM') and o.name = 'FK_Patient_Telecoms')
alter table ADMINISTRATIVE.PATIENT_TELECOM
   drop constraint FK_Patient_Telecoms
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENTCAREPROVIDERS')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENTCAREPROVIDERS
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_ADDRESS')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_ADDRESS
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_COMMUNICATION')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_COMMUNICATION
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_CONTACT')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_CONTACT
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_CONTACT_RELATIONSHIP')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_CONTACT_RELATIONSHIP
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_CONTACT_TELECOM')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_CONTACT_TELECOM
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_IDENTIFIER')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_IDENTIFIER
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_LINK')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_LINK
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_NAME')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_NAME
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_PHOTO')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_PHOTO
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_RACE')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_RACE
go

if exists (select 1
            from  sysobjects
           where  id = object_id('ADMINISTRATIVE.PATIENT_TELECOM')
            and   type = 'U')
   drop table ADMINISTRATIVE.PATIENT_TELECOM
go

execute sp_revokedbaccess ADMINISTRATIVE
go

/*==============================================================*/
/* User: ADMINISTRATIVE                                         */
/*==============================================================*/
execute sp_grantdbaccess ADMINISTRATIVE
go

/*==============================================================*/
/* Table: PATIENT                                               */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT (
   PATIENTID            varchar(64)          not null,
   BIRTHDATE            datetime             null,
   DECEASED             bit                  null,
   DECEASEDDATETIME     datetime             null,
   MARITALSTATUS        varchar(1)           null,
   MULTIPLEBIRTH        bit                  null,
   MULTIPLEBIRTHORDER   int                  null,
   ACTIVE               bit                  null,
   MOTHERSMAIDENNAME    varchar(1)           null,
   ETHNICITY            varchar(1)           null,
   RELIGION             varchar(1)           null,
   GENDER               varchar(7)           null
      constraint CKC_GENDER_PATIENT check (GENDER is null or (GENDER in ('male','female','other','unknown'))),
   MANAGINGORGANIZATIONID varchar(64)          null,
   BIRTHPLACEADDRESSUSE varchar(4)           null,
   BIRTHPLACEADDRESSTEXT varchar(1)           null,
   BIRTHPLACEADDRESSLINE varchar(1)           null,
   BIRTHPLACEADDRESSCITY varchar(1)           null,
   BIRTHPLACEADDRESSSTATE varchar(1)           null,
   BIRTHPLACEADDRESSPOSTALCODE varchar(1)           null,
   BIRTHPLACEADDRESSCOUNTRY varchar(1)           null,
   BIRTHPLACEADDRESSPERIODSTART datetime             null,
   BIRTHPLACEADDRESSPERIODEND datetime             null,
   constraint PK_PATIENT primary key (PATIENTID)
)
go

/*==============================================================*/
/* Table: PATIENTCAREPROVIDERS                                  */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENTCAREPROVIDERS (
   PATIENTCAREPROVIDERID int                  identity,
   PATIENTID            varchar(64)          not null,
   ORGANIZATIONID       varchar(1)           null,
   PRACTITIONERID       varchar(1)           null,
   constraint PK_PATIENTCAREPROVIDERS primary key (PATIENTCAREPROVIDERID)
)
go

/*==============================================================*/
/* Table: PATIENT_ADDRESS                                       */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_ADDRESS (
   PATIENTID            varchar(64)          not null,
   PATIENTADDRESSID     int                  identity,
   LINE                 varchar(1)           not null,
   CITY                 varchar(1)           not null,
   STATE                varchar(1)           not null,
   POSTALCODE           varchar(1)           not null,
   COUNTRY              varchar(1)           not null,
   constraint PK_PATIENT_ADDRESS primary key (PATIENTADDRESSID)
)
go

/*==============================================================*/
/* Table: PATIENT_COMMUNICATION                                 */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_COMMUNICATION (
   PATIENTCOMMUNICATIONID int                  identity,
   PATIENTID            varchar(64)          not null,
   CODE                 varchar(50)          not null,
   TEXT                 varchar(1)           null,
   constraint PK_PATIENT_COMMUNICATION primary key (PATIENTCOMMUNICATIONID)
)
go

execute sp_addextendedproperty 'MS_Description', 
   'http://tools.ietf.org/html/bcp47',
   'user', 'ADMINISTRATIVE', 'table', 'PATIENT_COMMUNICATION', 'column', 'CODE'
go

/*==============================================================*/
/* Table: PATIENT_CONTACT                                       */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_CONTACT (
   PATIENTCONTACTID     int                  identity,
   PATIENTID            varchar(64)          not null,
   GENDER               varchar(7)           null,
   PERIODSTART          datetime             null,
   PERIODEND            datetime             null,
   NAMEUSE              varchar(10)          null,
   NAMETEXT             varchar(1)           null,
   NAMEFAMILY           varchar(1)           null,
   NAMEGIVEN            varchar(1)           null,
   NAMEPREFIX           varchar(1)           null,
   NAMESUFFIX           varchar(1)           null,
   NAMEPERIODSTART      varchar(1)           null,
   NAMEPERIODEND        varchar(1)           null,
   ADDRESSUSE           varchar(4)           null,
   ADDRESSTEXT          varchar(1)           null,
   ADDRESSLINE          varchar(1)           null,
   ADDRESSCITY          varchar(1)           null,
   ADDRESSSTATE         varchar(1)           null,
   ADDRESSPOSTALCODE    varchar(1)           null,
   ADDRESSCOUNTRY       varchar(1)           null,
   ADDRESSPERIODSTART   datetime             null,
   ADDRESSPERIODEND     datetime             null,
   constraint PK_PATIENT_CONTACT primary key (PATIENTCONTACTID)
)
go

/*==============================================================*/
/* Table: PATIENT_CONTACT_RELATIONSHIP                          */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_CONTACT_RELATIONSHIP (
   PATIENTCONTACTRELATIONSHIPID int                  identity,
   PATIENTCONTACTID     int                  not null,
   CODE                 varchar(50)          not null,
   TEXT                 varchar(1)           null,
   constraint PK_PATIENT_CONTACT_RELATIONSHI primary key (PATIENTCONTACTRELATIONSHIPID, PATIENTCONTACTID)
)
go

execute sp_addextendedproperty 'MS_Description', 
   'V3 - 2.16.840.1.113883.5.111',
   'user', 'ADMINISTRATIVE', 'table', 'PATIENT_CONTACT_RELATIONSHIP', 'column', 'CODE'
go

/*==============================================================*/
/* Table: PATIENT_CONTACT_TELECOM                               */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_CONTACT_TELECOM (
   PATIENTCONTACTID     int                  not null,
   PATIENTCONTACTTELECOMID int                  identity,
   SYSTEM               varchar(5)           null,
   VALUE                varchar(1)           null,
   "USE"                varchar(6)           null,
   PERIODSTART          datetime             null,
   PERIODEND            datetime             null,
   constraint PK_PATIENT_CONTACT_TELECOM primary key (PATIENTCONTACTID, PATIENTCONTACTTELECOMID)
)
go

/*==============================================================*/
/* Table: PATIENT_IDENTIFIER                                    */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_IDENTIFIER (
   PATIENTIDENTIFIERID  int                  identity,
   PATIENTID            varchar(64)          not null,
   SYSTEM               varchar(1)           not null,
   VALUE                varchar(1)           not null,
   constraint PK_PATIENT_IDENTIFIER primary key (PATIENTIDENTIFIERID)
)
go

/*==============================================================*/
/* Table: PATIENT_LINK                                          */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_LINK (
   PATIENT_LINK_ID      int                  not null,
   PATIENTID            varchar(64)          not null,
   OTHER                varchar(64)          not null,
   TYPE                 varchar(7)           not null,
   constraint PK_PATIENT_LINK primary key (PATIENT_LINK_ID)
)
go

execute sp_addextendedproperty 'MS_Description', 
   'http://hl7.org/fhir/link-type',
   'user', 'ADMINISTRATIVE', 'table', 'PATIENT_LINK', 'column', 'TYPE'
go

/*==============================================================*/
/* Table: PATIENT_NAME                                          */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_NAME (
   PATIENTNAMEID        int                  identity,
   PATIENTID            varchar(64)          not null,
   "USE"                varchar(10)          null
      constraint CKC_USE_PATIENT_ check ("USE" is null or ("USE" in ('usual','official','temp','nickname','anonymous','old','maiden'))),
   TEXT                 varchar(1)           null,
   FAMILY               varchar(1)           null,
   GIVEN                varchar(1)           null,
   PREFIX               varchar(1)           null,
   SUFFIX               varchar(1)           null,
   PERIODSTART          datetime             null,
   PERIODEND            datetime             null,
   constraint PK_PATIENT_NAME primary key (PATIENTNAMEID)
)
go

/*==============================================================*/
/* Table: PATIENT_PHOTO                                         */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_PHOTO (
   PATIENT_PHOTO_ID     int                  identity,
   PATIENTID            varchar(64)          null,
   CONTENTTYPE          varchar(50)          null,
   LANGUAGE             varchar(30)          null,
   URL                  varchar(1)           null,
   SIZE                 int                  null,
   DATA                 binary(1)            null,
   HASH                 binary(1)            null,
   constraint PK_PATIENT_PHOTO primary key (PATIENT_PHOTO_ID)
)
go

execute sp_addextendedproperty 'MS_Description', 
   'http://www.rfc-editor.org/bcp/bcp13.txt',
   'user', 'ADMINISTRATIVE', 'table', 'PATIENT_PHOTO', 'column', 'CONTENTTYPE'
go

execute sp_addextendedproperty 'MS_Description', 
   'http://tools.ietf.org/html/bcp47',
   'user', 'ADMINISTRATIVE', 'table', 'PATIENT_PHOTO', 'column', 'LANGUAGE'
go

/*==============================================================*/
/* Table: PATIENT_RACE                                          */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_RACE (
   PATIENTRACEID        int                  identity,
   PATIENTID            varchar(64)          not null,
   CODE                 varchar(6)           not null,
   TEXT                 varchar(1)           null,
   constraint PK_PATIENT_RACE primary key (PATIENTRACEID)
)
go

/*==============================================================*/
/* Table: PATIENT_TELECOM                                       */
/*==============================================================*/
create table ADMINISTRATIVE.PATIENT_TELECOM (
   PATIENTTELECOMID     int                  not null,
   PATIENTID            varchar(64)          not null,
   SYSTEM               varchar(5)           null,
   VALUE                varchar(1)           null,
   "USE"                varchar(6)           null,
   PERIODSTART          datetime             null,
   PERIODEND            datetime             null,
   constraint PK_PATIENT_TELECOM primary key (PATIENTTELECOMID)
)
go

alter table ADMINISTRATIVE.PATIENTCAREPROVIDERS
   add constraint FK_Patient_Care_Providers foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_ADDRESS
   add constraint FK_Patient_Addresses foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_COMMUNICATION
   add constraint FK_Patient_Communications foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_CONTACT
   add constraint FK_Patient_Contacts foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_CONTACT_RELATIONSHIP
   add constraint FK_Patient_Contact_Relationships foreign key (PATIENTCONTACTID)
      references ADMINISTRATIVE.PATIENT_CONTACT (PATIENTCONTACTID)
go

alter table ADMINISTRATIVE.PATIENT_CONTACT_TELECOM
   add constraint FK_Patient_Contact_Telecoms foreign key (PATIENTCONTACTID)
      references ADMINISTRATIVE.PATIENT_CONTACT (PATIENTCONTACTID)
go

alter table ADMINISTRATIVE.PATIENT_IDENTIFIER
   add constraint FK_Patient_Identifiers foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_LINK
   add constraint FK_Patient_Links foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_NAME
   add constraint FK_Patient_Names foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_PHOTO
   add constraint FK_Patient_Photos foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_RACE
   add constraint FK_Patient_Races foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

alter table ADMINISTRATIVE.PATIENT_TELECOM
   add constraint FK_Patient_Telecoms foreign key (PATIENTID)
      references ADMINISTRATIVE.PATIENT (PATIENTID)
go

